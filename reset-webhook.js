const https = require('https');
const config = require('./config');

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const BOT_TOKEN = config.TELEGRAM_BOT_TOKEN;

if (!BOT_TOKEN) {
  console.error('‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
  process.exit(1);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ webhook
function resetWebhook() {
  const options = {
    hostname: 'api.telegram.org',
    port: 443,
    path: `/bot${BOT_TOKEN}/deleteWebhook`,
    method: 'GET'
  };

  const req = https.request(options, (res) => {
    let data = '';
    
    res.on('data', (chunk) => {
      data += chunk;
    });
    
    res.on('end', () => {
      try {
        const result = JSON.parse(data);
        if (result.ok) {
          console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω');
          console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:', result);
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ webhook:', result);
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞:', error);
      }
    });
  });

  req.on('error', (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
  });

  req.end();
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±—Ä–æ—Å webhook
console.log('üîÑ –°–±—Ä–∞—Å—ã–≤–∞—é webhook –¥–ª—è –±–æ—Ç–∞...');
resetWebhook();
