import "dotenv/config";
import TelegramBot from "node-telegram-bot-api";
import { mainKb } from "./keyboards";
import { guardUser, isExpired, isMuted } from "./guards";
import { startOnboarding, isOnboarding, handleOnboardingAnswer } from "./onboarding/runner";
import { registerFood, registerFoodCallbacks } from "./features/food";
import { registerReports } from "./features/reports";
import { registerPlan } from "./features/plan";
import { createUserJobs } from "./scheduler";
import { initDB } from "./storage";

const bot = new TelegramBot(process.env.BOT_TOKEN!, { polling: { autoStart: false } });

// /start
bot.onText(/^\/start$/, async (msg)=>{
  const u = await guardUser(msg.chat.id, msg.from);
  if(!u.plan_status){ // –Ω–µ—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞/–ø–ª–∞–Ω–∞ ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º
    startOnboarding(bot, msg.chat.id);
  } else {
    await bot.sendMessage(msg.chat.id, `–ü—Ä–∏–≤–µ—Ç, ${u.preferred_name||u.first_name}!`, { reply_markup: mainKb });
  }
  // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —Å–æ–∑–¥–∞–¥–∏–º –¥–∂–æ–±—ã (–µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –±—É–¥–µ—Ç)
  createUserJobs(bot, msg.chat.id);
});

// —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π Guard (–∞–≤—Ç–æ–±–ª–æ–∫ –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –º–µ—Å—è—Ü–∞)
bot.on("message", async (msg) => {
  if(/^\/start$/.test(msg.text||"")) return;          // —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏
  if(isOnboarding(msg.chat.id)){ await handleOnboardingAnswer(bot, msg); return; }

  const u = await guardUser(msg.chat.id, msg.from);
  if(isMuted(u)) return; // –º–æ–ª—á–∏–º
  if(isExpired(u)){
    return bot.sendMessage(msg.chat.id, "–ú–µ—Å—è—Ü –∑–∞–∫–æ–Ω—á–∏–ª—Å—è. üí≥ –ü—Ä–æ–¥–ª–∏—Ç—å?", {
      reply_markup: { inline_keyboard: [[{text:"–ü—Ä–æ–¥–ª–∏—Ç—å", url:"https://t.me/your_payment_link"}]] }
    });
  }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫
async function startBot() {
  try {
    await initDB();
    console.log("Database initialized successfully");
    
    // safety: —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ webhook —Ç–æ—á–Ω–æ —Å–Ω—è—Ç
    await fetch(`https://api.telegram.org/bot${process.env.BOT_TOKEN}/deleteWebhook`);
    console.log("Webhook deleted successfully");
    
    // —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ–∏—á–∏
    registerFood(bot);
    registerFoodCallbacks(bot);
    registerReports(bot);
    registerPlan(bot);
    
    // –∑–∞–ø—É—Å–∫–∞–µ–º polling —Ä–æ–≤–Ω–æ –û–î–ò–ù —Ä–∞–∑
    await bot.startPolling();
    console.log("Bot started. Ctrl+C to stop.");
  } catch (error) {
    console.error("Failed to start bot:", error);
    process.exit(1);
  }
}

startBot();
