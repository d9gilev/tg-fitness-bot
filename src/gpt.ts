export async function foodFeedback({user,note,photos}:{user:any; note?:string; photos?:string[]}){
  const kcal = user?.plan?.daily_kcal;
  const prot = user?.plan?.protein_g_per_kg;
  const name = user?.preferred_name || "–¥—Ä—É–≥";
  return [
    `üçΩÔ∏è ${name}, –ø—Ä–∏—ë–º —É—á—Ç—ë–Ω.`,
    kcal ? `‚Ä¢ –¶–µ–ª—å –ø–æ –∫–∞–ª–æ—Ä–∏—è–º: ~${kcal} –∫–∫–∞–ª/–¥–µ–Ω—å.` : "",
    prot ? `‚Ä¢ –ë–µ–ª–æ–∫: ~${prot} –≥/–∫–≥/—Å—É—Ç (–æ—Ä–∏–µ–Ω—Ç–∏—Ä).` : "",
    "‚Ä¢ –§–æ—Ç–æ –ë–ñ–£ –∏–ª–∏ —Ü–∏—Ñ—Ä—ã –≤ –ø–æ–¥–ø–∏—Å–∏ —É—Å–∫–æ—Ä—è—é—Ç –æ—Ü–µ–Ω–∫—É.",
    note ? `‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É—á—ë–ª: ¬´${note.slice(0,120)}¬ª` : ""
  ].filter(Boolean).join("\n");
}

export async function createPlanFromGPT(user: any){
  // –ü–æ–∫–∞ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ GPT: –≤–µ—Ä–Ω—ë–º –¥–µ—Ñ–æ–ª—Ç, –ø–æ–∑–∂–µ –ø–æ–¥–∫–ª—é—á–∏–º Responses API.
  return {
    daily_kcal: user.goal === "–ü–æ—Ö—É–¥–µ–Ω–∏–µ" ? 2100 : 2500,
    protein_g_per_kg: 1.6,
    water_goal_ml: 2300,
    meals_limit: 4,
    goodnight_window: ["22:50","23:10"] as [string, string],
  };
}
