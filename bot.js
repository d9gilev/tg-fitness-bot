const TelegramBot = require('node-telegram-bot-api');
const OpenAI = require('openai');
const http = require('http');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const config = {
  TELEGRAM_BOT_TOKEN: process.env.BOT_TOKEN,
  OPENAI_API_KEY: process.env.OPENAI_API_KEY,
  ADMIN_IDS: process.env.ADMIN_IDS 
    ? process.env.ADMIN_IDS.split(',').map(id => parseInt(id.trim()))
    : [26757881] // S M (@Stanis212) - –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –∞–¥–º–∏–Ω
};

// Health check server –¥–ª—è Fly.io
const server = http.createServer((req, res) => {
  if (req.url === '/health') {
    res.writeHead(200, { 'Content-Type': 'application/json' });
    res.end(JSON.stringify({ status: 'ok', timestamp: new Date().toISOString() }));
  } else {
    res.writeHead(404);
    res.end();
  }
});

server.listen(process.env.PORT || 8080, () => {
  console.log(`Health check server running on port ${process.env.PORT || 8080}`);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(config.TELEGRAM_BOT_TOKEN, { 
  polling: true,
  polling_options: {
    timeout: 10,
    limit: 100,
    retryTimeout: 5000
  }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI
const openai = new OpenAI({
  apiKey: config.OPENAI_API_KEY
});

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userContexts = new Map();

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∞
function isAdmin(userId) {
  return config.ADMIN_IDS.includes(userId);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/^\/start$/, async (msg) => {
  const chatId = msg.chat.id;
  const welcomeMessage = `
–ü—Ä–∏–≤–µ—Ç! –Ø –ú–∞–∫—Å, —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º! üèãÔ∏è‚Äç‚ôÇÔ∏è

–ú–æ—è —Å—É–ø–µ—Ä—Å–∏–ª–∞ - —è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏–∑—É—á–∞—é –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –í–û–ó, –Ω–∞—Ö–æ–∂—É –Ω–∞—É—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ —Å–æ–∑–¥–∞—é –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è!

–ù–µ –≤–∞–∂–Ω–æ, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã –ø–æ—Ö—É–¥–µ—Ç—å, –Ω–∞–±—Ä–∞—Ç—å –º—ã—à–µ—á–Ω—É—é –º–∞—Å—Å—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞—Ç—å –∑–¥–æ—Ä–æ–≤–µ–µ - —è —Å–æ—Å—Ç–∞–≤–ª—é –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≤–µ–¥–µ—Ç —Ç–µ–±—è –∫ —Ü–µ–ª–∏.

–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –ø—É—Ç—å –∫ –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–∏ —Å–µ–±—è? –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö!
  `;
  
  await bot.sendMessage(chatId, welcomeMessage, {
    reply_markup: {
      keyboard: [
        [{ text: "üìÖ –ü–ª–∞–Ω" }, { text: "üìù –û—Ç—á—ë—Ç" }],
        [{ text: "üíß +250 –º–ª" }, { text: "üçΩÔ∏è –ï–¥–∞" }],
        [{ text: "üïí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ" }, { text: "üîï –ü–∞—É–∑–∞ 24—á" }],
        [{ text: "üë§ –ü—Ä–æ—Ñ–∏–ª—å" }, { text: "‚ùì –ü–æ–º–æ—â—å" }],
      ],
      resize_keyboard: true,
      is_persistent: true,
      one_time_keyboard: false,
      selective: false,
    },
  });
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
bot.onText(/^\/menu$/, async (msg) => {
  const chatId = msg.chat.id;
  await bot.sendMessage(chatId, "–ú–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ üëá", {
    reply_markup: {
      keyboard: [
        [{ text: "üìÖ –ü–ª–∞–Ω" }, { text: "üìù –û—Ç—á—ë—Ç" }],
        [{ text: "üíß +250 –º–ª" }, { text: "üçΩÔ∏è –ï–¥–∞" }],
        [{ text: "üïí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ" }, { text: "üîï –ü–∞—É–∑–∞ 24—á" }],
        [{ text: "üë§ –ü—Ä–æ—Ñ–∏–ª—å" }, { text: "‚ùì –ü–æ–º–æ—â—å" }],
      ],
      resize_keyboard: true,
      is_persistent: true,
      one_time_keyboard: false,
      selective: false,
    },
  });
});



// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /clear
bot.onText(/\/clear/, async (msg) => {
  const chatId = msg.chat.id;
  userContexts.delete(chatId);
  await bot.sendMessage(chatId, 'üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞! –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö –Ω–æ–≤—ã—Ö —Ü–µ–ª—è—Ö.');
});

// –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
bot.onText(/\/admin_reset/, async (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  
  if (!isAdmin(userId)) {
    await bot.sendMessage(chatId, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    return;
  }
  
  const resetKeyboard = {
    inline_keyboard: [
      [
        { text: '‚úÖ –î–∞, –æ—á–∏—Å—Ç–∏—Ç—å –í–°–ï –¥–∞–Ω–Ω—ã–µ', callback_data: 'confirm_reset_all' },
        { text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'cancel_reset' }
      ]
    ]
  };
  
  await bot.sendMessage(chatId, 
    '‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!\n\n' +
    '‚Ä¢ –í—Å–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤\n' +
    '‚Ä¢ –í—Å—è –∏—Å—Ç–æ—Ä–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π\n' +
    '‚Ä¢ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n' +
    '–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ù–ï–û–ë–†–ê–¢–ò–ú–û! –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é:',
    { reply_markup: resetKeyboard }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
  if (text.startsWith('/')) {
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
  if (text === "üìÖ –ü–ª–∞–Ω") {
    await bot.sendMessage(chatId, "üìÖ –°–æ–∑–¥–∞—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫...\n\n–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö –∏ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–≤–Ω–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏!");
    return;
  }
  
  if (text === "üìù –û—Ç—á—ë—Ç") {
    await bot.sendMessage(chatId, "üìù –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å...\n\n–ü–æ–∫–∞ —á—Ç–æ –æ—Ç—á—ë—Ç—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞!");
    return;
  }
  
  if (text === "üíß +250 –º–ª") {
    await bot.sendMessage(chatId, "üíß +250 –º–ª –≤–æ–¥—ã –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –¥–Ω–µ–≤–Ω–∏–∫!\n\n–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø–∏—Ç—å –≤–æ–¥—É - —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.");
    return;
  }
  
  if (text === "üçΩÔ∏è –ï–¥–∞") {
    await bot.sendMessage(chatId, "üçΩÔ∏è –î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è\n\n–†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ —Ç—ã —Å—ä–µ–ª –∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å —Å—ä–µ—Å—Ç—å - —è –ø–æ–º–æ–≥—É —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é!");
    return;
  }
  
  if (text === "üïí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ") {
    await bot.sendMessage(chatId, "üïí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n\n–í –∫–∞–∫–∏–µ –¥–Ω–∏ –∏ –≤—Ä–µ–º—è —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è?");
    return;
  }
  
  if (text === "üîï –ü–∞—É–∑–∞ 24—á") {
    await bot.sendMessage(chatId, "üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ 24 —á–∞—Å–∞\n\n–ù–µ –∑–∞–±—É–¥—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º –∑–∞–≤—Ç—Ä–∞!");
    return;
  }
  
  if (text === "üë§ –ü—Ä–æ—Ñ–∏–ª—å") {
    await bot.sendMessage(chatId, "üë§ –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n\n–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–≤–æ–∏—Ö —Ü–µ–ª—è—Ö, –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö. –°–∫–æ—Ä–æ!");
    return;
  }
  
  if (text === "‚ùì –ü–æ–º–æ—â—å") {
    const helpMessage = `
üìö –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ –º–Ω–æ–π:

‚Ä¢ –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö (–ø–æ—Ö—É–¥–µ–Ω–∏–µ, –Ω–∞–±–æ—Ä –º–∞—Å—Å—ã, –∑–¥–æ—Ä–æ–≤—å–µ)
‚Ä¢ –û–ø–∏—à–∏ —Å–≤–æ–π —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
‚Ä¢ –£–∫–∞–∂–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—é
‚Ä¢ –Ø —Å–æ–∑–¥–∞–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫

–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:
- "–•–æ—á—É –ø–æ—Ö—É–¥–µ—Ç—å –Ω–∞ 10 –∫–≥ –∑–∞ 3 –º–µ—Å—è—Ü–∞"
- "–ù—É–∂–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –Ω–∞–±–æ—Ä–∞ –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã –¥–æ–º–∞"
- "–•–æ—á—É —Å—Ç–∞—Ç—å –≤—ã–Ω–æ—Å–ª–∏–≤–µ–µ –¥–ª—è –±–µ–≥–∞"
    `;
    await bot.sendMessage(chatId, helpMessage);
    return;
  }

  try {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞
    await bot.sendChatAction(chatId, 'typing');

    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!userContexts.has(chatId)) {
      userContexts.set(chatId, []);
    }
    const context = userContexts.get(chatId);

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    context.push({ role: 'user', content: text });

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 10 —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    if (context.length > 10) {
      context.splice(0, context.length - 10);
    }

    // –ó–∞–ø—Ä–æ—Å –∫ GPT
    const completion = await openai.chat.completions.create({
      model: 'gpt-3.5-turbo',
      messages: [
        {
          role: 'system',
          content: '–¢—ã –ú–∞–∫—Å - –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä —Å –ò–ò. –¢—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—à—å—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –í–û–ó –∏ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π. –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –Ω–∞—É—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è —Å–≤–æ–∏—Ö —Å–æ–≤–µ—Ç–æ–≤. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –±—É–¥—å –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º.'
        },
        ...context
      ],
      max_tokens: 1000,
      temperature: 0.7
    });

    const response = completion.choices[0].message.content;

    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    context.push({ role: 'assistant', content: response });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await bot.sendMessage(chatId, response);

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    await bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback query (–∫–Ω–æ–ø–∫–∏)
bot.on('callback_query', async (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const userId = callbackQuery.from.id;
  const data = callbackQuery.data;
  
  // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
  await bot.answerCallbackQuery(callbackQuery.id);
  
  if (data === 'confirm_reset_all') {
    if (!isAdmin(userId)) {
      await bot.sendMessage(chatId, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.');
      return;
    }
    
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    userContexts.clear();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.editMessageText(
      '‚úÖ –í–°–ï –î–ê–ù–ù–´–ï –£–î–ê–õ–ï–ù–´!\n\n' +
      '‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤: –æ—á–∏—â–µ–Ω—ã\n' +
      '‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π: —É–¥–∞–ª–µ–Ω–∞\n' +
      '‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: —Å–±—Ä–æ—à–µ–Ω—ã\n\n' +
      '–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–º—É —Å—Ç–∞—Ä—Ç—É! üöÄ',
      {
        chat_id: chatId,
        message_id: callbackQuery.message.message_id,
        reply_markup: { inline_keyboard: [] }
      }
    );
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    setTimeout(async () => {
      await bot.sendMessage(chatId, 
        '–ü—Ä–∏–≤–µ—Ç! –Ø –ú–∞–∫—Å, —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º! üèãÔ∏è‚Äç‚ôÇÔ∏è\n\n' +
        '–ú–æ—è —Å—É–ø–µ—Ä—Å–∏–ª–∞ - —è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏–∑—É—á–∞—é –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –í–û–ó, –Ω–∞—Ö–æ–∂—É –Ω–∞—É—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ —Å–æ–∑–¥–∞—é –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è!\n\n' +
        '–ù–µ –≤–∞–∂–Ω–æ, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã –ø–æ—Ö—É–¥–µ—Ç—å, –Ω–∞–±—Ä–∞—Ç—å –º—ã—à–µ—á–Ω—É—é –º–∞—Å—Å—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞—Ç—å –∑–¥–æ—Ä–æ–≤–µ–µ - —è —Å–æ—Å—Ç–∞–≤–ª—é –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≤–µ–¥–µ—Ç —Ç–µ–±—è –∫ —Ü–µ–ª–∏.\n\n' +
        '–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –ø—É—Ç—å –∫ –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–∏ —Å–µ–±—è? –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö!'
      );
    }, 1000);
    
    console.log(`üîß –ê–¥–º–∏–Ω ${userId} –≤—ã–ø–æ–ª–Ω–∏–ª –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö`);
    
  } else if (data === 'cancel_reset') {
    await bot.editMessageText(
      '‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.',
      {
        chat_id: chatId,
        message_id: callbackQuery.message.message_id,
        reply_markup: { inline_keyboard: [] }
      }
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
  console.error('–û—à–∏–±–∫–∞ polling:', error);
});

bot.on('error', (error) => {
  console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
